<root>
<let id = "adder" > <vexp op = "id" > x </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > size </vexp> <vexp op = "id" > M </vexp> 
   <match id = "n" >
          <pair case = "0" > <pexp gate = "SKIP" id = "x" > <vexp op = "num" > 0 </vexp> </pexp> </pair>
           <pair case = "m" >
                  <app id = "adder" > <vexp op = "id" > x </vexp> <vexp op = "id" > m </vexp> <vexp op = "id" > size </vexp> <vexp op = "id" > M </vexp> </app>
                  <if> <vexp op = "$" > <vexp op = "id" > M </vexp> <vexp op = "id" > m </vexp> </vexp>
                      <next> <pexp gate = "SR" id = "x" > <vexp op = "-" > <vexp op = "id" > size </vexp> <vexp op = "id" > m </vexp> </vexp> </pexp> </next>
                      <next> <pexp gate = "SKIP"id = "x" > <vexp op = "id" > m </vexp> </pexp> </next>
                 </if>
           </pair>   
   </match>
</let>

<let id = "sub" > <vexp op = "id" > x </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > size </vexp> <vexp op = "id" > M </vexp> 
   <match id = "n" >
          <pair case = "0" > <pexp gate = "SKIP" id = "x" > <vexp op = "num" > 0 </vexp> </pexp> </pair>
           <pair case = "m" >
                  <app id = "sub" > <vexp op = "id" > x </vexp> <vexp op = "id" > m </vexp> <vexp op = "id" > size </vexp> <vexp op = "id" > M </vexp> </app>
                  <if> <vexp op = "$" > <vexp op = "id" > M </vexp> <vexp op = "id" > m </vexp> </vexp>
                      <next> <pexp gate = "SR" id = "x" > <vexp op = "-" > <vexp op = "id" > m </vexp> <vexp op = "id" > size </vexp> </vexp> </pexp> </next>
                      <next> <pexp gate = "SKIP"id = "x" > <vexp op = "id" > m </vexp> </pexp> </next>
                 </if>
           </pair>   
   </match>
</let>

<let id = "compare" > <vexp op = "id" > x </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > c </vexp> <vexp op = "id" > i </vexp> <vexp op = "id" > m </vexp>
    <app id = "sub" > <vexp op = "id" > x </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > m </vexp> </app>
    <pexp gate = "RQFT" id = "x" > </pexp>
    <pexp gate = "CU" id = "x" > <vexp op = "-" > <vexp op = "id" > n </vexp> <vexp op = "num" > 1 </vexp> </vexp> 
     <pexp gate = "X" id = "c" > <vexp op = "id" > i </vexp> </pexp></pexp>
</let>   


<let id = "f" > <vexp op = "id" > i </vexp> <vexp op = "id" > x </vexp>  <vexp op = "id" > ex </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > M </vexp>
   <match id = "i" >
          <pair case = "0" > <pexp gate = "SKIP" id = "x" > <vexp op = "num" > 0 </vexp> </pexp> </pair>
           <pair case = "m" > 
               < app id = "compare" > <vexp op = "id" > x </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > ex </vexp> <vexp op = "id" > m </vexp> <vexp op = "id" > M </vexp> </app> 
               <pexp gate = "QFT" id = "x" > <vexp op = "num" > 0 </vexp> </pexp> 
                 <pexp gate = "CU" id = "ex" > <vexp op = "id" > m </vexp>
                    <app id = "adder" > <vexp op = "id" > x </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > n </vexp> <vexp op = "id" > M </vexp> </app> </pexp>
                     <pexp gate = "X" id = "ex" > <vexp op = "id" > m </vexp> </pexp>
                          < app id = "f" > <vexp op = "id" > m </vexp> <vexp op = "id" > x </vexp> <vexp op = "id" > ex </vexp> <vexp op = "id" > n </vexp>
                              <vexp op = "/" > <vexp op = "id" > M </vexp> <vexp op = "num" > 2 </vexp> </vexp> </app> 
           </pair>   
   </match>
</let>


<pexp gate = "QFT" id = "x" > <vexp op = "num" > 0 </vexp> </pexp> 
< app id = "f" > <vexp op = "+" > <vexp op = "id" > i </vexp> <vexp op = "num" > 1 </vexp> </vexp> <vexp op = "id" > x </vexp> <vexp op = "id" > ex </vexp> <vexp op = "id" > na </vexp> 
   <vexp op = "*" > <vexp op = "^" > <vexp op = "num" > 2 </vexp> <vexp op = "id" > i </vexp> </vexp> <vexp op = "id" > m </vexp> </vexp> </app> 
<pexp gate = "RQFT" id = "x" > </pexp>
</root>

